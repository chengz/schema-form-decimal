angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/number/decimal.html",'<div class="form-group" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label" ng-show="showTitle()">{{form.title}}</label><input type="number" class="form-control" step="any" sf-changed="form" placeholder="{{form.placeholder}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" schema-validate="form"><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }"></span><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>')}]),angular.module("schemaForm-decimal",["schemaForm"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,r,o){var a=function(r,a,s){if("number"==a.type&&"decimal"==a.format){var c=e.stdFormObj(r,a,s);return c.key=s.path,c.type="decimal",s.lookup[o.stringify(s.path)]=c,c}};e.defaults.number.unshift(a),r.addMapping("bootstrapDecorator","decimal","directives/decorators/bootstrap/number/decimal.html"),r.createDirective("decimal","directives/decorators/bootstrap/number/decimal.html")}]);